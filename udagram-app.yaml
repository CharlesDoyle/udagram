apiVersion: v1
data:
  AWS_BUCKET: s3-charlie-udagram-dev
  AWS_REGION: us-west-2
  DB_DIALECT: postgres
  POSTGRESS_DB: charliedb1
  POSTGRESS_HOST: charliedb1.cwmm1cptaa94.us-east-1.rds.amazonaws.com
  URL: http://localhost:8100
  allow_origin_url: '*'
  port: "8080"
kind: ConfigMap
metadata:
  name: env-config
---
apiVersion: v1
data:
  aws_access_key_id: QUtJQVRGSFVNT1JaWktKV0ZaUFA=
  aws_profile: Y2hhcmxpZV91ZGFncmFtX2Rldg==
  aws_secret_access_key: VHVNdE5sZmVwKytQU3BBUndQOXg0aWZhQmF6Ri9KajZ1b29zYnVrNw==
kind: Secret
metadata:
  name: aws-secret
type: Opaque
---
apiVersion: v1
data:
  jwt_secret: aGVsbG93b3JsZA==
  postgress_password: Y2hhcmxpZWRiMQ==
  postgress_username: Y2hhcmxpZWRiMQ==
kind: Secret
metadata:
  name: env-secret
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: backend-feed
  name: backend-feed
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    service: backend-feed
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: backend-user
  name: backend-user
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    service: backend-user
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: frontend
  name: frontend
spec:
  ports:
  - name: "8100"
    port: 8100
    targetPort: 80
  selector:
    service: frontend
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: reverseproxy
  name: reverseproxy
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    service: reverseproxy
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: backend-feed
  name: backend-feed
spec:
  replicas: 1
  revisionHistoryLimit: 10  #default is 10. keep up to 10 revisions
  selector:
    matchLabels:
      service: backend-feed
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: backend-feed
    spec:
      containers:
      - env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: port
              name: env-config
        - name: URL
          valueFrom:
            configMapKeyRef:
              key: URL
              name: env-config
        - name: ALLOW_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: allow_origin_url
              name: env-config
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              key: AWS_BUCKET
              name: env-config
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              key: AWS_REGION
              name: env-config
        - name: POSTGRESS_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRESS_DB
              name: env-config
        - name: POSTGRESS_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRESS_HOST
              name: env-config
        - name: POSTGRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgress_password
              name: env-secret
        - name: POSTGRESS_USERNAME
          valueFrom:
            secretKeyRef:
              key: postgress_username
              name: env-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: jwt_secret
              name: env-secret
        - name: AWS_PROFILE
          valueFrom:
            secretKeyRef:
              key: aws_profile
              name: aws-secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws_access_key_id
              name: aws-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws_secret_access_key
              name: aws-secret
        image: char2pie/udagram-restapi-feed:v1.2
        imagePullPolicy: Always
        name: backend-feed
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: backend-user
  name: backend-user
spec:
  replicas: 1
  revisionHistoryLimit: 10  #default is 10. keep up to 10 revisions
  selector:
    matchLabels:
      service: backend-user
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: backend-user
    spec:
      containers:
      - env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: port
              name: env-config
        - name: URL
          valueFrom:
            configMapKeyRef:
              key: URL
              name: env-config
        - name: ALLOW_ORIGIN_URL
          valueFrom:
            configMapKeyRef:
              key: allow_origin_url
              name: env-config
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              key: AWS_BUCKET
              name: env-config
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              key: AWS_REGION
              name: env-config
        - name: POSTGRESS_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRESS_DB
              name: env-config
        - name: POSTGRESS_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRESS_HOST
              name: env-config
        - name: POSTGRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgress_password
              name: env-secret
        - name: POSTGRESS_USERNAME
          valueFrom:
            secretKeyRef:
              key: postgress_username
              name: env-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: jwt_secret
              name: env-secret
        - name: AWS_PROFILE
          valueFrom:
            secretKeyRef:
              key: aws_profile
              name: aws-secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws_access_key_id
              name: aws-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws_secret_access_key
              name: aws-secret
        image: char2pie/udagram-restapi-user:v1.1
        imagePullPolicy: Always
        name: backend-user
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      service: frontend
  template:
    metadata:
      labels:
        service: frontend
    spec:
      containers:
      - image: char2pie/udagram-frontend
        imagePullPolicy: Always
        name: frontend
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: reverseproxy
  name: reverseproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      service: reverseproxy
  template:
    metadata:
      labels:
        service: reverseproxy
    spec:
      containers:
      - image: char2pie/reverseproxy:v1
        imagePullPolicy: Always
        name: reverseproxy
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      restartPolicy: Always

# This file is made by running 
# udagram$ kubectl kustomize ./udagram_deployment > ./udagram_app.yaml'